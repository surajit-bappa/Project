<?phpclass Login extends CI_Controller {	function __construct()	{		parent::__construct();		$this->load->model('modeladmin');	    $this->load->model('users_mod');		$this->load->library('form_validation');		$this->load->helper('captcha');	}		function isLoggedIn()	{		$id = $this->session->userdata('user_id');		if($id > 0) 		{			return true;		}		else 		{			return false;		}	}	function index()	{		$data['success_msg'] 	= $this->session->userdata('success_msg');		$data['error_msg'] 	= $this->session->userdata('error_msg');		$data['loginTypes'] = $this->modeladmin->getLoginType();		$this->session->set_userdata('success_msg', "");		$this->session->set_userdata('error_msg', "");		$data['site_title'] = 'Login Area';		//captcha				$vals = array(	        //'word'          => 'AbCd',	        'img_path'      => 'captcha/',	        'img_url'       => 'captcha/',	        'font_path'     => './captcha4.ttf',	        'img_width'     => '290',	        'img_height'    => 35,	        'expiration'    => 7800,	        'word_length'   => 5,	        'font_size'     => 20,	        //'img_id'        => 'Imageid',	        'pool'          => '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',		        // White background and border, black text and red grid	        'colors'        => array(	                'background' => array(255, 255, 255),	                'border' => array(200, 200, 200),	                'text' => array(100, 100, 100),	                'grid' => array(200, 200, 200)	        )		);		$data['cap'] = create_captcha($vals);				if($this->isLoggedIn())		{		  $data['totalUsers']  = $this->users_mod->get_user_list();	          $this->load->view('login/home',$data);								}		else		{			$this->load->view('login/index',$data);		}	 	}	 public function refresh()    {    	        $config = array(            'img_path'      => 'captcha/',	        'img_url'       => base_url().'captcha/',             'font_path'     => './captcha4.ttf',	        'img_width'     => '290',	        'img_height'    => 35,	        'expiration'    => 7800,	        'word_length'   => 5,	        'font_size'     => 20,	        //'img_id'        => 'Imageid',	        'pool'          => '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',		        // White background and border, black text and red grid	        'colors'        => array(	                'background' => array(255, 255, 255),	                'border' => array(200, 200, 200),	                'text' => array(100, 100, 100),	                'grid' => array(200, 200, 200)	        )        );        $captcha = create_captcha($config);        $this->session->unset_userdata('valuecaptchaCode');        $this->session->set_userdata('valuecaptchaCode', $captcha['word']);        echo $captcha['image'];    }		function do_login()	{		//captcha				$vals = array(	        //'word'          => 'AbCd',	        'img_path'      => 'captcha/',	        'img_url'       => base_url().'captcha/',	        'font_path'     => './captcha4.ttf',	        'img_width'     => '290',	        'img_height'    => 35,	        'expiration'    => 7800,	        'word_length'   => 5,	        'font_size'     => 20,	        //'img_id'        => 'Imageid',	        'pool'          => '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',		        // White background and border, black text and red grid	        'colors'        => array(	                'background' => array(255, 255, 255),	                'border' => array(200, 200, 200),	                'text' => array(100, 100, 100),	                'grid' => array(200, 200, 200)	        )		);		$data['cap'] = create_captcha($vals);		$data['loginTypes'] = $this->modeladmin->getLoginType();		//validation		$this->load->library('form_validation');		$this->form_validation->set_error_delimiters('<div class="text-danger">', '</div>');		$config = array(			array(				'field' => 'login_type',				'label' => 'Login Type',				'rules' => 'required'			),			array(				'field' => 'password',				'label' => 'Password',				'rules' => 'required'			),			array(				'field' => 'captcha',				'label' => 'Captcha',				'rules' => 'required|callback_username_check['.$this->input->post('security_code').']'			)		);			$this->form_validation->set_rules($config);			if ($this->form_validation->run() == FALSE) {						$this->load->view('login/index',$data);		} 		else{	 						if($this->modeladmin->authenticateUser())			{				$this->session->set_userdata('success_msg', "You have logged in successfully.");				redirect(base_url()."login");			}						else 			{				$this->session->set_userdata('error_msg', "Login Type , Password  and Captcha do not match!");				redirect(base_url()."login");			}		}	}	//custom validation for captcha	public function username_check($captcha,$security_code){				if($captcha != ""){			if(hash('sha256',strtoupper($captcha).$this->config->item('encryption_key')) == $security_code){								 return TRUE;			} else {				$this->form_validation->set_message('username_check', 'The {field} is incorrect');					            return FALSE;			}		}	}		/*    function  do_forgotpassword()	{		$this->form_validation->set_rules('email', 'Email', 'trim|required|valid_email');		$this->form_validation->set_error_delimiters('<div class="error">', '</div>');		if($this->form_validation->run() == TRUE)		{			$email = $this->input->post('email');            $check_data = $this->forget_password_model->check_username_for_forget_password($email);						if($check_data)			{				//$this->session->set_userdata('success_msg', "We have sent you an mail with reset password link to your registred email.");				$data['email'] = $email;				$this->load->view('login/resetpassword',$data);				//redirect(base_url()."login");			}			else 			{				$this->session->set_userdata('error_msg', "You have entered an invalid email!");				redirect(base_url()."login");			}					}		else 		{  			redirect(base_url()."login");		}	}		function do_reset_password()	{		//$id = $this->session->userdata('user_data');		$email = $this->input->post('email');		$data['email'] = $email;		$this->form_validation->set_rules('old_password', 'Old Password', 'trim|required|xss_clean');		$this->form_validation->set_rules('new_password', 'New Password', 'trim|required|xss_clean');		$this->form_validation->set_rules('confirm_password', 'Confirm Password', 'trim|required|xss_clean|matches[new_password]');		$this->form_validation->set_error_delimiters('<div class="error">', '</div>');		$data['success_msg'] 	= $this->session->userdata('success_msg');		$data['error_msg'] 	= $this->session->userdata('error_msg');				$this->session->set_userdata('success_msg', "");		$this->session->set_userdata('error_msg', "");		if($this->form_validation->run())		{			if($this->modeladmin->valideOldPassword($email)) 			{				$this->modeladmin->updatePassword($email);                $this->session->set_userdata('success_msg', "Password has been changed successfully.PLease log in to continue");				redirect(base_url()."login");			} 			else 			{				$data['error_msg']  = "Old password is invalid ...";			}			$this->load->view('login/resetpassword',$data);		}		else		{			$data['error_msg']  = "	New password and confirm password does not match ...";			$this->load->view('login/resetpassword',$data);		}	}*/}/* End of file login.php *//* Location: ./system/application/controllers/login.php */?>